include "std.phtn"

memory fd sizeof(ptr) end
memory stat_buffer sizeof(stat) end
memory content sizeof(Str) end
memory line sizeof(Str) end
memory word sizeof(Str) end

if argc 2 < do
    "Filename is required\n" eputs
    1 exit
end
// open file given as first argument
O_RDONLY 1 argv[n] open

if dup -1 == do
    "Could not open file: " eputs 1 argv[n] dup strlen swap eputsln
    1 exit
end

fd !8

stat_buffer fd @8 fstat64

if dup -1 == do
    "Failed to call fstat on file: " eputs 1 argv[n] dup strlen swap eputsln
    1 exit
end drop

stat_buffer stat.st_size @8 content Str.length !8

0                       // offset
fd @8                   // fd
MAP_PRIVATE             // flags
PROT_READ               // prot
content Str.length @8   // len
NULL                    // addr
mmap

content Str.data !8

if content Str.data @8 0 < do
  "Could not memory map file " eputs 1 argv[n] dup strlen swap eputs "\n" eputs
  1 exit
end


while content Str.length @8 0 > do
    line content Str.chop_line()
    while line Str.length @8 0 > do
        line Str.left_strip()
        word line Str.chop_word()
        word @Str putsln
    end
end